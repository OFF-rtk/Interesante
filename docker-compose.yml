version: '3.8'

services:
  # Backend - Copyright Shield NestJS API (CLEANED UP)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      
      # Database configuration
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/copyright_shield
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=copyright_shield
      
      # Copyright Shield specific configs
      - AI_SERVICE_URL=http://ai-service:5000
      - BASE_URL=http://localhost:3000
      
      # Authentication (Supabase) - from .env file
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - SUPABASE_PROJECT_REF=${SUPABASE_PROJECT_REF}
      
      # Cache
      - REDIS_URL=redis://redis:6379
      
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      ai-service:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
      - /app/node_modules
      - video_uploads:/tmp/video-uploads
    networks:
      - copyright-shield-network
    restart: unless-stopped

  # Frontend - Copyright Shield Next.js Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - INTERNAL_API_URL=http://backend:3001
      - NODE_ENV=development
      
      # Copyright Shield branding
      - NEXT_PUBLIC_APP_NAME=Copyright Shield
      - NEXT_PUBLIC_CERTIFICATE_PRICE=7
      - NEXT_PUBLIC_ANALYSIS_PRICE=25
      
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - copyright-shield-network
    restart: unless-stopped

  # AI Service - Copyright Shield ML Engine
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      
      # Copyright Shield specific configs
      - MAX_VIDEO_SIZE_MB=100
      - MAX_PROCESSING_TIME_SECONDS=300
      - FRAME_EXTRACTION_LIMIT=50
      - TEMP_DIR=/tmp/video-uploads
      
    volumes:
      - ./ai-service:/app
      - video_uploads:/tmp/video-uploads
    networks:
      - copyright-shield-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: copyright_shield
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # REMOVED problematic init.sql mount until file exists
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d copyright_shield"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - copyright-shield-network

  # Redis - Caching for certificates and analysis results
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - copyright-shield-network
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  video_uploads:

networks:
  copyright-shield-network:
    driver: bridge
